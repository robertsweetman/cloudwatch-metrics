name: Rust-Monitor

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install system dependencies
      run: sudo apt-get update && sudo apt-get install -y libssl-dev    

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Build Linux Release
      id: linux_release
      uses: actions-rs/cargo@v1
      with:
        command: build 
        args: --verbose --release --target=x86_64-unknown-linux-gnu

    - name: Create tar.gz
      run: tar czvf ./target/x86_64-unknown-linux-gnu/release/rust-monitor-linux.tar.gz ./target/x86_64-unknown-linux-gnu/release/rust-monitor  

    - name: Upload to Workflow Artifact
      uses: actions/upload-artifact@v2
      with:
        name: rust-monitor
        path: ./target/release/rust-monitor.tar.gz     

    # - name: Run tests
    #   uses: actions-rs/cargo@v1
    #   with:
    #     command: test
    #     args: --verbose

    # - name: Setup AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: eu-west-2

    # - name: Upload Artifact to s3
    #   working-directory: ${{ env.applicationfolder }}/target
    #   run: aws s3 cp target/x86_64-unknown-linux-gnu/release/rust-monitor-linux.zip s3://${{ env.S3BUCKET }}/rust-monitor-linux.zip

    # - name: Build Windows
    #   uses: actions-rs/cargo@v1
    #   with:
    #     use-cross: true
    #     command: build 
    #     args: --verbose --release --target=x86_64-pc-windows-gnu


